name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Lint (ruff)
        run: uv run ruff check .

  typecheck:
    name: Typecheck • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Type check (mypy)
        run: uv run mypy .

  format_check:
    name: Format check • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    concurrency:
      group: format-${{ github.ref }}
      cancel-in-progress: true
    # Allow committing fixes back to PR branches when this job runs on pull_request events.
    permissions:
      contents: write
    steps:
      - name: Checkout (PR branch)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0

      - name: Checkout (default)
        if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.repository }}
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      # On PRs from branches within this repository, attempt to auto-fix formatting
      # and commit back before running the check. Forks are skipped due to token
      # permissions being read-only.
      - name: Run Ruff autofix (PRs from this repo only)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        run: |
          uv run ruff check --fix .
          uv run ruff format .

      - name: Commit formatting changes (PRs from this repo only)
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(format): apply Ruff fixes"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          branch: ${{ github.event.pull_request.head.ref }}

      - name: Format check (ruff)
        if: ${{ always() }}
        run: uv run ruff format --check .

  test:
    name: Tests • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Tests (pytest)
        run: |
          set -eo pipefail
          uv run pytest -q || rc=$?
          if [ "${rc:-0}" -eq 5 ]; then
            echo "Pytest reported 'no tests collected' (exit 5). Treating as success."
            exit 0
          fi
          exit ${rc:-0}
