name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: write
  contents: read

# Keep concurrency scoped to the specific commit so follow-up commits on a PR
# don't cancel the run that produced an autofix commit. This avoids the
# appearance of a "stuck" or failing autofix job when a replacement run starts.
concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Lint (ruff)
        run: uv run ruff check .

  typecheck:
    name: Typecheck • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Type check (mypy)
        run: uv run mypy .

  format_autofix_pr:
    name: Format autofix (PR) • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event_name == 'pull_request' }}
    # Expose whether we actually committed changes so downstream jobs can skip
    # redundant format checks in the same run (the follow-up run will enforce it).
    outputs:
      committed: ${{ steps.auto_commit.outputs.changes_detected }}
    permissions:
      contents: write
    # Make this job's concurrency unique per run to prevent a subsequent run's
    # autofix job from canceling the current run's autofix job.
    concurrency:
      group: ${{ github.workflow }}-${{ github.run_id }}
      cancel-in-progress: true
    steps:
      - name: Checkout (PR head)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
          # Do not leave the workflow token in the repo; the commit step will provide its own token.
          persist-credentials: false

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      # Attempt to auto-fix formatting and lint issues on same-repo PRs.
      - name: Run Ruff autofix
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        run: |
          uv run ruff check --fix .
          uv run ruff format .

      - name: Commit formatting changes
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        id: auto_commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(format): apply Ruff fixes"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          branch: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

  format_check_pr:
    name: Format check • Ubuntu
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.sha }}
      cancel-in-progress: true
    needs: [format_autofix_pr]
    # Only run the read-only check when the autofix job did not push changes.
    if: ${{ needs.format_autofix_pr.outputs.committed != 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Format check (ruff)
        run: uv run ruff format --check .

  format_check_push:
    name: Format check • Ubuntu
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Format check (ruff)
        run: uv run ruff format --check .

  test:
    name: Tests • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Tests (pytest)
        run: |
          set -eo pipefail
          uv run pytest -q || rc=$?
          if [ "${rc:-0}" -eq 5 ]; then
            echo "Pytest reported 'no tests collected' (exit 5). Treating as success."
            exit 0
          fi
          exit ${rc:-0}
