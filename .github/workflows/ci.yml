name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  actions: write
  contents: read

concurrency:
  # Key the run-level concurrency to the commit SHA so an autofix commit
  # created within this workflow doesn't cancel the run that created it.
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Lint (ruff)
        run: uv run ruff check .

  typecheck:
    name: Typecheck • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Type check (mypy)
        run: uv run mypy .

  format_autofix_pr:
    name: Format autofix (PR) • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ github.event_name == 'pull_request' }}
    permissions:
      contents: write
    concurrency:
      # Make this job's concurrency unique per run to avoid cross-run
      # interference when a push is created by this job.
      group: ${{ github.workflow }}-autofix-${{ github.run_id }}
      cancel-in-progress: false
    steps:
      - name: Checkout (PR head)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
          # Keep the Actions token so the auto-commit step can push.
          persist-credentials: true

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      # Attempt to auto-fix formatting and lint issues on same-repo PRs.
      - name: Run Ruff autofix
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        run: |
          uv run ruff check --fix .
          uv run ruff format .

      - name: Commit formatting changes
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(format): apply Ruff fixes"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          branch: ${{ github.event.pull_request.head.ref }}
          # No explicit token input is supported in v5; rely on the checkout credentials.

  format_check:
    name: Format check • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Format check (ruff)
        run: uv run ruff format --check .

  test:
    name: Tests • Ubuntu
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (from .python-version)
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version

      - name: Set up uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync workspace dependencies (locked)
        run: uv sync --locked

      - name: Tests (pytest)
        run: |
          set -eo pipefail
          uv run pytest -q || rc=$?
          if [ "${rc:-0}" -eq 5 ]; then
            echo "Pytest reported 'no tests collected' (exit 5). Treating as success."
            exit 0
          fi
          exit ${rc:-0}
